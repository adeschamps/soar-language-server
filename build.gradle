plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'maven'
    id 'signing'
    id 'com.github.dkorotych.gradle-maven-exec' version '2.1'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'com.dorongold.task-tree' version '1.3.1'
    id 'io.freefair.git-version' version '2.5.11'
    id 'com.github.sherter.google-java-format' version '0.8'
}

// applicationDefaultJvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999,quiet=y']

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    mavenLocal()
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'org.apache.commons:commons-lang3:3.9'

    // Language server protocol types.
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.7.0'

    // We are currently depending on a JSoar version that is in flux.
    implementation 'com.soartech:jsoar-core:4.0-SNAPSHOT'
    implementation 'com.soartech:jsoar-tcl:4.0-SNAPSHOT'

    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.4.2'
}

task compileJSoar(type: MavenExec) {
    workingDir 'jsoar/'
    goals 'install'
    options {
        define = [
            'maven.test.skip': 'true',
            'maven.javadoc.skip': 'true'
        ]
        batchMode true
    }
}
classes.dependsOn compileJSoar

googleJavaFormat {
    include 'src/'
}

// Define the main class for the application
mainClassName = 'com.soartech.soarls.App'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadShadow {
    repositories {
        mavenDeployer {
            repository(url: "$maven2_url") {
                authentication(userName: System.getenv('NEXUS_USERNAME'), password: System.getenv('NEXUS_PASSWORD'))
            }
            snapshotRepository(url: "$snapshot_url") {
                authentication(userName: System.getenv('NEXUS_USERNAME'), password: System.getenv('NEXUS_PASSWORD'))
            }
            pom.project {
                name "$project_name"
                packaging 'jar'
                description "$project_description"
                url "$project_url"
                scm {
                    url "$project_url"
                    connection "$project_scm"
                    developerConnection "$project_scm_ssh"
                }
                licenses {
                    license {
                        name "$project_license_slug"
                        url "$project_license_url"
                    }
                }
                developers {
                    developer {
                        id 'adeschamps'
                        name "$project_developer"
                        email 'anthony.deschamps@soartech.com'
                    }
                }
            }
        }
    }
}